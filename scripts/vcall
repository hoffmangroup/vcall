#!/usr/bin/env python
from __future__ import division

"""
vcall: recursively run version control commands
"""

__version__ = "$Revision$"

# Copyright 2008 Michael M. Hoffman <hoffman+software@ebi.ac.uk>

from os import walk
import sys

from path import path

from optbuild import OptionBuilder, OptionBuilder_ShortOptWithSpace

SVN_PROG = OptionBuilder("svn")
CVS_PROG = OptionBuilder_ShortOptWithSpace("cvs")

def vcall(command="status", *dirnames):
    if not dirnames:
        dirnames = ["."]

    if command == "status":
        cvs_command = "update"
        cvs_kwargs = dict(n=True) # don't do anything on disk
    else:
        cvs_command = command
        cvs_kwargs = {}

    for dirname in dirnames:
        for branch_dirname, dirnames, filenames in walk(dirname):
            if ".svn" in dirnames:
                SVN_PROG(command, branch_dirname)
                del dirnames[:]
            elif "CVS" in dirnames:
                CVS_PROG(cvs_command, branch_dirname, **cvs_kwargs)
                del dirnames[:]

def parse_options(args):
    from optparse import OptionParser

    usage = "%prog COMMAND [PATH...] [OPTION]..."
    version = "%%prog %s" % __version__
    parser = OptionParser(usage=usage, version=version)

    options, args = parser.parse_args(args)

    return options, args

def main(args=sys.argv[1:]):
    options, args = parse_options(args)

    return vcall(*args)

if __name__ == "__main__":
    sys.exit(main())
